{"version":3,"sources":["components/Nav.jsx","components/Item.jsx","components/Total.jsx","components/Items.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","Component","Item","_this","this","onClick","props","src","alt","name","price","amount","Total","key","id","total","empty","Items","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","items","type","handleClick","bind","assertThisInitialized","newState","i","length","setState","_this2","HotDrinks","filter","item","Beer","map","components_Item","open","components_Total","App","components_Nav","components_Items","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa0bd234.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-header\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Some logo\r\n          </a>\r\n        </div>\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link \" href=\"#\">\r\n              Home\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              About\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Item extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card\"\r\n        onClick={() => {\r\n          this.props.onClick();\r\n        }}\r\n      >\r\n        <img className=\"card-img-top\" src={this.props.src} alt={this.props.alt} />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{this.props.name}</h5>\r\n          <p className=\"card-text\">{this.props.price} KM</p>\r\n          <div>\r\n            <p>\r\n              Total amount:\r\n              <span className=\"badge badge-info\">{this.props.amount}</span>\r\n            </p>\r\n            <p>\r\n              Total price:\r\n              <span className=\"badge badge-info\">\r\n                {this.props.price * this.props.amount} KM\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nclass Total extends Component {\r\n  empty() {\r\n    if (this.props.amount === 0) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <li className=\"list-group-item\" key={this.props.id}>\r\n            {this.props.name} x {this.props.amount} Price: {this.props.price}KM Total:\r\n            {this.props.total}KM\r\n          </li>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return this.empty();\r\n  }\r\n}\r\n\r\nexport default Total;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./Item.jsx\";\r\nimport Total from \"./Total.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Items extends Component {\r\n  state = {\r\n    items: [\r\n      {\r\n        id: 0,\r\n        name: \"coffe\",\r\n        price: 1.5,\r\n        src: \"./img/espresso.jpg\",\r\n        alt: \"Cup of coffee\",\r\n        type: \"hot-drinks\",\r\n        amount: 0\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"tea\",\r\n        price: 1.5,\r\n        src: \"./img/tea.jpg\",\r\n        alt: \"Cup of tea\",\r\n        type: \"hot-drinks\",\r\n        amount: 0\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"beer\",\r\n        price: 2.5,\r\n        src: \"./img/beer.jpg\",\r\n        alt: \"Pint of beer\",\r\n        type: \"beer\",\r\n        amount: 0\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"dark beer\",\r\n        price: 3.0,\r\n        src: \"./img/dark-beer.jpg\",\r\n        alt: \"Glass of dark beer\",\r\n        type: \"beer\",\r\n        amount: 0\r\n      }\r\n    ],\r\n    total: 0,\r\n    id: 0,\r\n    price: 0\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick(price, name, id) {\r\n    let newState = this.state;\r\n    newState.items[id].amount = this.state.items[id].amount + 1;\r\n    function total() {\r\n      let total = 0;\r\n      for (let i = 0; i < newState.items.length; i++) {\r\n        total = total + newState.items[i].price * newState.items[i].amount;\r\n      }\r\n      return total;\r\n    }\r\n    newState.total = total();\r\n    newState.id = id;\r\n    newState.price = this.state.items[id].price * this.state.items[id].amount;\r\n    this.setState({ state: this.newState });\r\n  }\r\n  render() {\r\n    const HotDrinks = this.state.items.filter(item => item.type === \"hot-drinks\");\r\n    const Beer = this.state.items.filter(item => item.type === \"beer\");\r\n    return (\r\n      <div className=\"row\">\r\n        <ul className=\"container col-9\">\r\n          <p className=\"bg-primary text-white mt-2 mb-0 pl-2\">Hot Drinks</p>\r\n          <div className=\"row\">\r\n            {HotDrinks.map(HotDrinks => (\r\n              <li className=\"col-6 list-group-item\" key={HotDrinks.id}>\r\n                <Item\r\n                  onClick={() => {\r\n                    this.handleClick(HotDrinks.price, HotDrinks.name, HotDrinks.id);\r\n                  }}\r\n                  name={HotDrinks.name}\r\n                  price={HotDrinks.price}\r\n                  amount={HotDrinks.amount}\r\n                  src={HotDrinks.src}\r\n                  alt={HotDrinks.alt}\r\n                />\r\n              </li>\r\n            ))}\r\n          </div>\r\n          <p className=\"bg-primary text-white mt-2 mb-0 pl-2\">Beer</p>\r\n          <div open className=\"row\">\r\n            {Beer.map(Beer => (\r\n              <li className=\"col-6 list-group-item\" key={Beer.id}>\r\n                <Item\r\n                  onClick={() => this.handleClick(Beer.price, Beer.name, Beer.id)}\r\n                  name={Beer.name}\r\n                  price={Beer.price}\r\n                  amount={Beer.amount}\r\n                  src={Beer.src}\r\n                  alt={Beer.alt}\r\n                />\r\n              </li>\r\n            ))}\r\n          </div>\r\n        </ul>\r\n        <div className=\"col-3\">\r\n          <p className=\"bg-info text-white mb-0 mt-2 pl-2\">Order:</p>\r\n          <ul className=\"list-group\">\r\n            {this.state.items.map(items => (\r\n              <Total\r\n                key={this.state.items[items.id].id}\r\n                id={this.state.items[items.id].id}\r\n                name={this.state.items[items.id].name}\r\n                amount={this.state.items[items.id].amount}\r\n                price={this.state.items[items.id].price}\r\n                total={\r\n                  this.state.items[items.id].price * this.state.items[items.id].amount\r\n                }\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div className=\"bg-primary text-white text-right mt-2 pr-2\">\r\n            Total: {this.state.total}KM\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\n","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav.jsx\";\nimport Items from \"./components/Items.jsx\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main id=\"app\">\n        <nav>\n          <Nav />\n        </nav>\n        <div>\n          <Items />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}